{"version":3,"sources":["CommandPalette/CommandPaletteContext.tsx","CommandPalette/icons/arrow-up-right.svg","CommandPalette/CommandPalette.tsx","examples/BasicExample.tsx","examples/common/Navbar.tsx","examples/KeyboardShortcut.tsx","examples/ALotOfActionsExample.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["noop","_line","_polyline","CommandPaletteContext","createContext","actions","addAction","removeAction","show","hide","toggle","shown","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgArrowUpRight","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","ref","id","x1","y1","x2","y2","points","ForwardRef","defaultFuseOptions","CommandPalette","children","InputProps","FuseOptions","useState","setActions","setShown","undefined","input","setInput","inputRef","useRef","itemsRef","useEffect","current","slice","useCallback","newAction","prevActions","find","action","Error","givenAction","filter","MergedFuseOptions","useMemo","filteredActions","console","time","results","Fuse","search","sortedResults","sort","a","b","score","map","v","item","log","timeEnd","useHotkeys","e","enableOnTags","preventDefault","prevElem","document","activeElement","previousElementSibling","focus","nextElem","nextElementSibling","tabIndex","Provider","value","prevShown","onClick","type","onInput","text","currentTarget","autoFocus","el","onKeyDown","onSelect","leading","BasicExample","navigate","useNavigate","useContext","open","testAction","Navbar","placeholder","onFocus","to","KeyboardShortcutExample","lorem","LoremIpsum","sentencesPerParagraph","max","min","wordsPerSentence","testActions","Array","from","_","generateSentences","alert","ALotOfActionsExample","forEach","App","path","element","KeyboardShortcut","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sQAaA,SAASA,KAET,ICfIC,EAAOC,EDwBIC,EATeC,wBAAsC,CAClEC,QAAS,GACTC,UAAWN,EACXO,aAAcP,EACdQ,KAAMR,EACNS,KAAMT,EACNU,OAAQV,EACRW,OAAO,I,uBCpBT,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,EAAgBC,EAAMC,GAC7B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOxB,EAAS,CACtD6B,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,OAAQ,eACRC,YAAa,EACbC,cAAe,QACfC,eAAgB,QAChBC,UAAW,iCACXC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3Dc,GAAIb,GACHD,GAAS,KAAMrC,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EoD,GAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAI,KACDtD,IAAcA,EAAyB,gBAAoB,WAAY,CAC1EuD,OAAQ,qBAIZ,IAAIC,EAA0B,aAAiBvB,G,GAChC,I,MCKTwB,EAAyD,CAC7D9B,KAAM,CAAC,UAGI+B,EAAiB,SAAC,GAIH,IAH1BC,EAGyB,EAHzBA,SACAC,EAEyB,EAFzBA,WACAC,EACyB,EADzBA,YAEA,EAA8BC,mBAAmB,IAAjD,mBAAO3D,EAAP,KAAgB4D,EAAhB,KACA,EAA0BD,oBAAS,GAAnC,mBAAOrD,EAAP,KAAcuD,EAAd,KACA,EAA0BF,wBAA6BG,GAAvD,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAyB,MACpCC,EAAWD,iBAAqC,IACtDE,qBAAU,WACRD,EAASE,QAAUF,EAASE,QAAQC,MAAM,EAAGtE,EAAQa,UACpD,CAACb,IAgBJ,IAAMC,EAAYsE,uBAAY,SAACC,GAC7B,OAAOZ,GAAW,SAACa,GACjB,GAAIA,EAAYC,MAAK,SAACC,GAAD,OAAYA,EAAO5B,KAAOyB,EAAUzB,MACvD,MAAM6B,MACJ,0GAEJ,MAAM,GAAN,mBAAWH,GAAX,CAAwBD,SAEzB,IAGGtE,EAAeqE,uBAAY,SAACM,GAChC,OAAOjB,GAAW,SAACa,GAAD,OAChBA,EAAYK,QAAO,SAACH,GAAD,OAAYA,EAAO5B,KAAO8B,EAAY9B,WAE1D,IAMG3C,EAAO,kBAAMyD,GAAS,IAatBkB,EAAoBC,mBACxB,8BAAC,eAAW1B,GAAuBI,KACnC,CAACA,IAGGuB,EAAkBD,mBAAQ,WAC9B,IAAKjB,EAAO,OAAO/D,EAEnBkF,QAAQC,KAAK,QACb,IAEMC,EAFK,IAAIC,IAAarF,EAAS+E,GAEhBO,OAAOvB,GACtBwB,EAAgBH,EACnBI,MAAK,SAACC,EAAGC,GAAJ,eAAU,UAACD,EAAEE,aAAH,QAAY,IAAZ,UAAkBD,EAAEC,aAApB,QAA6B,MAC5CC,KAAI,SAACC,GAAD,OAAOA,EAAEC,QAGhB,OAFAZ,QAAQa,IAAI,eAAgBX,GAC5BF,QAAQc,QAAQ,QACTT,IACN,CAACvF,EAAS+D,EAAOgB,IA2DpB,OArDAkB,YACE,SACA1B,uBACE,SAAC2B,GACK5F,GAAOF,MAEb,CAACE,IAEH,CAAE6F,aAAc,CAAC,WAGnBF,YACE,KACA1B,uBACE,SAAC2B,GAAO,IAAD,YACL,GAAK5F,EAAL,CAEA4F,EAAEE,iBAEF,IAAMC,EAAQ,UAAGC,SAASC,qBAAZ,aAAG,EACbC,uBAECH,GAAYC,SAASC,iBAAT,UAA2BpC,EAASE,eAApC,aAA2B,EAAmB,IAErDgC,EAELA,EAASI,QADZ,UAAAtC,EAASE,eAAT,oBAAmB,UAAAF,EAASE,eAAT,eAAkBxD,QAAS,UAA9C,SAAkD4F,QAFlD,UAAAxC,EAASI,eAAT,SAAkBoC,WAKtB,CAACnG,IAEH,CAAE6F,aAAc,CAAC,WAGnBF,YACE,OACA1B,uBACE,SAAC2B,GAAO,IAAD,QACL,GAAK5F,EAAL,CAEA4F,EAAEE,iBAEF,IAAMM,EAAQ,UAAGJ,SAASC,qBAAZ,aAAG,EACbI,mBAECD,GAC2B,IAAvBA,EAASE,SAAiB,UAAAzC,EAASE,eAAT,mBAAmB,UAAnB,SAAuBoC,QACrDC,EAASD,QAFC,UAAAxC,EAASI,eAAT,SAAkBoC,WAInC,CAACnG,IAEH,CAAE6F,aAAc,CAAC,WAIjB,eAAC,EAAsBU,SAAvB,CACEC,MAAO,CAAE9G,UAASC,YAAWC,eAAcC,KA/FlC,kBAAM0D,GAAS,IA+FyBzD,OAAMC,OAzF5C,kBAAMwD,GAAS,SAACkD,GAAD,OAAgBA,MAyFqBzG,SADjE,UAGGkD,EAEAlD,GACC,qCACE,qBAAKuC,UAAU,2BAA2BmE,QAAS5G,IACnD,sBAAKyC,UAAU,kBAAf,UACE,yBAAQA,UAAU,0BAAlB,UACE,+CACEoE,KAAK,UACDxD,GAFN,IAGEyD,QAvEM,SAAChB,GAxBN,IAACiB,IAyBPjB,EAAEkB,cAAcN,MAxBvB9C,EAASmD,IA+FGrE,IAAKmB,EACLoD,WAAS,KAEX,sBAAKxE,UAAU,gCAAf,UACE,gCACE,+CADF,OACmB,sCADnB,kBAGA,gCACE,wCADF,OACsB,wCADtB,gBAGA,gCACE,sCADF,qBAKJ,yBAASA,UAAU,2BAA2B+D,UAAW,EAAzD,SACG3B,EAAgBW,KAAI,SAACjB,EAAQhE,GAAT,OACnB,sBAEEiG,SAAU,EACV9D,IAAK,SAACwE,GAAD,OAASnD,EAASE,QAAQ1D,GAAK2G,GACpCC,UAAW,SAACrB,GAAO,IAAD,EAChB,GAAc,UAAVA,EAAEnF,IAAiB,iBAAO4D,EAAO6C,gBAAd,aAAO,OAAA7C,IAEhC9B,UAAU,kCACVmE,QAASrC,EAAO6C,SARlB,UAUG7C,EAAO8C,SAAW,8BAAM9C,EAAO8C,UAChC,oBAAI5E,UAAU,wCAAd,SACG8B,EAAO1C,QAGV,qBAAKY,UAAU,WAAf,SACE,cAAC,EAAD,CAAYR,MAAO,SAfhBsC,EAAO5B,mB,OCzLf2E,EAjCM,WACnB,IAAMC,EAAWC,cACjB,EAIIC,qBAAW/H,GAHbG,EADF,EACEA,UACAC,EAFF,EAEEA,aACM4H,EAHR,EAGE3H,KAGI4H,EAAqB/C,mBACzB,iBAAO,CACLjC,GAAI,EACJd,MAAO,+BACPuF,SAAU,kBAAMG,EAAS,0BAE3B,CAACA,IAWH,OARAvD,qBAAU,WAGR,OAFAnE,EAAU8H,GAEH,WACL7H,EAAa6H,MAEd,CAAC9H,EAAWC,EAAc6H,IAG3B,qCACE,+EACA,wBAAQf,QAASc,EAAjB,sC,OCLSE,G,MAvBA,WACb,IAAQ7H,EAAS0H,qBAAW/H,GAApBK,KACR,OACE,iCACE,sBAAK0C,UAAU,YAAf,UACE,qBAAKA,UAAU,OAAf,SACE,uDAEF,uBACEoE,KAAK,SACLgB,YAAY,8BACZC,QAAS/H,IAEX,gCACE,cAAC,IAAD,CAAMgI,GAAG,SAAT,2BACA,cAAC,IAAD,CAAMA,GAAG,qBAAT,+BACA,cAAC,IAAD,CAAMA,GAAG,oBAAT,wCChBJJ,EAAqB,CAAEhF,GAAI,OAAQd,MAAO,WA8BjCmG,EA5BiB,WAC9B,MAA4CP,qBAAW/H,GAA/CG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcG,EAAjC,EAAiCA,OAoBjC,OAlBA4F,YACE,UACA,SAACC,GAECA,EAAEE,iBACF/F,MAEF,IAGF+D,qBAAU,WAGR,OAFAnE,EAAU8H,GAEH,WACL7H,EAAa6H,MAEd,CAAC9H,EAAWC,IAGb,mCACE,mFCzBAmI,EAAQ,I,MAAIC,YAAW,CAC3BC,sBAAuB,CACrBC,IAAK,EACLC,IAAK,GAEPC,iBAAkB,CAChBF,IAAK,GACLC,IAAK,KAIHE,EAAwBC,MAAMC,KAAK,CAAEhI,OAAQ,KAAM,SAACiI,EAAGnI,GAAJ,MAAW,CAClEoC,GAAIpC,EACJsB,MAAOoG,EAAMU,kBAAkB,GAC/BvB,SAAU,WACRwB,MAAM,wBAA0BrI,QAwBrBsI,EApBc,WAC3B,MAA0CpB,qBAAW/H,GAA7CG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,KAUjC,OARAiE,qBAAU,WAGR,OAFAuE,EAAYO,SAAQ,SAACnB,GAAD,OAAgB9H,EAAU8H,MAEvC,WACLY,EAAYO,SAAQ,SAACnB,GAAD,OAAgB7H,EAAa6H,SAElD,CAAC9H,EAAWC,IAGb,mCACE,4BACE,wBAAQ8G,QAAS7G,EAAjB,2CCPOgJ,MAvBf,WACE,OACE,cAAC,EAAD,CAAgB1F,WAAY,CAAEwE,YAAa,+BAA3C,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKpF,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuG,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CACED,KAAK,qBACLC,QAAS,cAACC,EAAD,MAEX,cAAC,IAAD,CACEF,KAAK,oBACLC,QAAS,cAAC,EAAD,iBCRRE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5D,SAAS6D,eAAe,SAM1BZ,M","file":"static/js/main.dc76d9bc.chunk.js","sourcesContent":["import { createContext } from \"react\";\nimport { Action } from \"./CommandPalette\";\n\nexport interface ICommandPaletteContext {\n  actions: Action[];\n  addAction(action: Action): void;\n  removeAction(action: Action): void;\n  show(): void;\n  hide(): void;\n  toggle(): void;\n  shown: boolean;\n}\n\nfunction noop() {}\n\nconst CommandPaletteContext = createContext<ICommandPaletteContext>({\n  actions: [],\n  addAction: noop,\n  removeAction: noop,\n  show: noop,\n  hide: noop,\n  toggle: noop,\n  shown: false,\n});\nexport default CommandPaletteContext;\n","var _line, _polyline;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrowUpRight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-arrow-up-right\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 7,\n    y1: 17,\n    x2: 17,\n    y2: 7\n  })), _polyline || (_polyline = /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"7 7 17 7 17 17\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowUpRight);\nexport default __webpack_public_path__ + \"static/media/arrow-up-right.4b0c4ca1.svg\";\nexport { ForwardRef as ReactComponent };","import {\n  FormEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport CommandPaletteContext from \"./CommandPaletteContext\";\nimport Fuse from \"fuse.js\";\nimport \"./CommandPalette.scss\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nimport { ReactComponent as ArrowRight } from \"./icons/arrow-up-right.svg\";\n\ninterface CommandPaletteProps {\n  /**\n   * Options provided by module Fuse.js.\n   * Visit their [online documentation](https://fusejs.io/api/options.html) for more information.\n   * */\n  FuseOptions?: Fuse.IFuseOptions<Action>;\n\n  children: React.ReactNode;\n\n  InputProps?: React.DetailedHTMLProps<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n  >;\n}\n\nexport interface Action {\n  /** The identifier for the action. This has to be supplied to remove the action later. */\n  id: string | number;\n  /** The type to identifying the action */\n  // type: string,\n  /** The name which will be displayed to the user when searching */\n  title: string;\n  /** A component to display before the `title` */\n  leading?: React.ReactNode;\n  /** Additional data which describes the action */\n  data?: object;\n\n  /** Event handler when the action has been selected */\n  onSelect?: () => void;\n}\n\nconst defaultFuseOptions: CommandPaletteProps[\"FuseOptions\"] = {\n  keys: [\"title\"],\n};\n\nexport const CommandPalette = ({\n  children,\n  InputProps,\n  FuseOptions,\n}: CommandPaletteProps) => {\n  const [actions, setActions] = useState<Action[]>([]);\n  const [shown, setShown] = useState(false);\n  const [input, setInput] = useState<string | undefined>(undefined);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const itemsRef = useRef<Array<HTMLDivElement | null>>([]);\n  useEffect(() => {\n    itemsRef.current = itemsRef.current.slice(0, actions.length);\n  }, [actions]);\n\n  /**\n   * Adds a new action to the command palette.\n   *\n   * To add a dynamic action, you could combine `addAction` and `removeAction` with `useEffect`.\n   * @example\n   * ```typescript\n   * const action = { id: 'config', name: 'Open user configuration' };\n   *\n   * useEffect(() => {\n   *  addAction(action);\n   *  return () => { removeAction(action) };\n   * }, [addAction, removeAction]);\n   * ```\n   * */\n  const addAction = useCallback((newAction: Action) => {\n    return setActions((prevActions) => {\n      if (prevActions.find((action) => action.id === newAction.id))\n        throw Error(\n          \"This action already has been added. Did you forget to remove this action with removeAction beforehand?\"\n        );\n      return [...prevActions, newAction];\n    });\n  }, []);\n\n  /** Removes a certain action from the command palette */\n  const removeAction = useCallback((givenAction: Action) => {\n    return setActions((prevActions) =>\n      prevActions.filter((action) => action.id !== givenAction.id)\n    );\n  }, []);\n\n  /** Shows the command palette to the user */\n  const show = () => setShown(true);\n\n  /** Hides the command palette for the user */\n  const hide = () => setShown(false);\n\n  /** Toggles the command palette for the user */\n  const toggle = () => setShown((prevShown) => !prevShown);\n\n  // useEffect(() => {\n  //     if (shown) inputRef.current?.focus();\n  // }, [inputRef, shown])\n\n  const search = (text: string) => {\n    setInput(text);\n  };\n\n  const MergedFuseOptions = useMemo(\n    () => ({ ...defaultFuseOptions, ...FuseOptions }),\n    [FuseOptions]\n  );\n\n  const filteredActions = useMemo(() => {\n    if (!input) return actions;\n\n    console.time(\"fuse\");\n    var fuse = new Fuse<Action>(actions, MergedFuseOptions);\n\n    const results = fuse.search(input);\n    const sortedResults = results\n      .sort((a, b) => (a.score ?? 0) - (b.score ?? 0))\n      .map((v) => v.item);\n    console.log(\"fuse results\", results);\n    console.timeEnd(\"fuse\");\n    return sortedResults;\n  }, [actions, input, MergedFuseOptions]);\n\n  const handleInput = (e: FormEvent<HTMLInputElement>) => {\n    search(e.currentTarget.value);\n  };\n\n  useHotkeys(\n    \"escape\",\n    useCallback(\n      (e) => {\n        if (shown) hide();\n      },\n      [shown]\n    ),\n    { enableOnTags: [\"INPUT\"] }\n  );\n\n  useHotkeys(\n    \"up\",\n    useCallback(\n      (e) => {\n        if (!shown) return;\n\n        e.preventDefault();\n\n        const prevElem = document.activeElement\n          ?.previousElementSibling as HTMLDivElement | null;\n\n        if (!prevElem && document.activeElement === itemsRef.current?.[0])\n          inputRef.current?.focus();\n        else if (!prevElem)\n          itemsRef.current?.[itemsRef.current?.length - 1]?.focus();\n        else prevElem.focus();\n      },\n      [shown]\n    ),\n    { enableOnTags: [\"INPUT\"] }\n  );\n\n  useHotkeys(\n    \"down\",\n    useCallback(\n      (e) => {\n        if (!shown) return;\n\n        e.preventDefault();\n\n        const nextElem = document.activeElement\n          ?.nextElementSibling as HTMLDivElement | null;\n\n        if (!nextElem) inputRef.current?.focus();\n        else if (nextElem.tabIndex === -1) itemsRef.current?.[0]?.focus();\n        else nextElem.focus();\n      },\n      [shown]\n    ),\n    { enableOnTags: [\"INPUT\"] }\n  );\n\n  return (\n    <CommandPaletteContext.Provider\n      value={{ actions, addAction, removeAction, show, hide, toggle, shown }}\n    >\n      {children}\n\n      {shown && (\n        <>\n          <div className=\"command-palette--overlay\" onClick={hide}></div>\n          <div className=\"command-palette\">\n            <header className=\"command-palette--header\">\n              <input\n                type=\"search\"\n                {...InputProps}\n                onInput={handleInput}\n                ref={inputRef}\n                autoFocus\n              />\n              <div className=\"command-palette--header--help\">\n                <div>\n                  <kbd>↑↓</kbd> or <kbd>tab</kbd> to navigate\n                </div>\n                <div>\n                  <kbd>enter</kbd> or <kbd>click</kbd> to select\n                </div>\n                <div>\n                  <kbd>esc</kbd> to close\n                </div>\n              </div>\n            </header>\n            <section className=\"command-palette--results\" tabIndex={-1}>\n              {filteredActions.map((action, i) => (\n                <div\n                  key={action.id}\n                  tabIndex={0}\n                  ref={(el) => (itemsRef.current[i] = el)}\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\") return action.onSelect?.();\n                  }}\n                  className=\"command-palette--results-result\"\n                  onClick={action.onSelect}\n                >\n                  {action.leading && <div>{action.leading}</div>}\n                  <h6 className=\"command-palette--results-result-title\">\n                    {action.title}\n                  </h6>\n                  {/* <small>id: {action.id}</small> */}\n                  <div className=\"trailing\">\n                    <ArrowRight width={18} />\n                  </div>\n                </div>\n              ))}\n            </section>\n          </div>\n        </>\n      )}\n    </CommandPaletteContext.Provider>\n  );\n};\n","import { useContext, useEffect, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Action } from \"../CommandPalette\";\nimport CommandPaletteContext from \"../CommandPalette/CommandPaletteContext\";\n\nconst BasicExample = () => {\n  const navigate = useNavigate();\n  const {\n    addAction,\n    removeAction,\n    show: open,\n  } = useContext(CommandPaletteContext);\n\n  const testAction: Action = useMemo(\n    () => ({\n      id: 1,\n      title: \"Visit keyboard shortcut demo\",\n      onSelect: () => navigate(\"/keyboard-shortcut\"),\n    }),\n    [navigate]\n  );\n\n  useEffect(() => {\n    addAction(testAction);\n\n    return () => {\n      removeAction(testAction);\n    };\n  }, [addAction, removeAction, testAction]);\n\n  return (\n    <>\n      <p>This is a basic example of the Command Palette</p>\n      <button onClick={open}>Open command palette</button>\n    </>\n  );\n};\n\nexport default BasicExample;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CommandPaletteContext from \"../../CommandPalette/CommandPaletteContext\";\nimport \"./Navbar.css\";\n\nconst Navbar = () => {\n  const { show } = useContext(CommandPaletteContext);\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"logo\">\n          <code>react-cmd-palette</code>\n        </div>\n        <input\n          type=\"search\"\n          placeholder=\"What are you searching for?\"\n          onFocus={show}\n        />\n        <nav>\n          <Link to=\"/basic\">Basic example</Link>\n          <Link to=\"/keyboard-shortcut\">Keyboard shortcut</Link>\n          <Link to=\"/a-lot-of-actions\">A lot of actions</Link>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import { useContext, useEffect } from \"react\";\nimport { Action } from \"../CommandPalette\";\nimport CommandPaletteContext from \"../CommandPalette/CommandPaletteContext\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nconst testAction: Action = { id: \"back\", title: \"Go back\" };\n\nconst KeyboardShortcutExample = () => {\n  const { addAction, removeAction, toggle } = useContext(CommandPaletteContext);\n\n  useHotkeys(\n    \"ctrl+p\",\n    (e) => {\n      // Prevent default is here because CTRL + P usually starts the print dialog\n      e.preventDefault();\n      toggle();\n    },\n    {}\n  );\n\n  useEffect(() => {\n    addAction(testAction);\n\n    return () => {\n      removeAction(testAction);\n    };\n  }, [addAction, removeAction]);\n\n  return (\n    <>\n      <p>Toggle the command palette by pressing CTRL + P</p>\n    </>\n  );\n};\n\nexport default KeyboardShortcutExample;\n","import { useContext, useEffect } from \"react\";\nimport { LoremIpsum } from \"lorem-ipsum\";\nimport { Action } from \"../CommandPalette\";\nimport CommandPaletteContext from \"../CommandPalette/CommandPaletteContext\";\n\nconst lorem = new LoremIpsum({\n  sentencesPerParagraph: {\n    max: 8,\n    min: 4,\n  },\n  wordsPerSentence: {\n    max: 16,\n    min: 4,\n  },\n});\n\nconst testActions: Action[] = Array.from({ length: 50 }, (_, i) => ({\n  id: i,\n  title: lorem.generateSentences(1),\n  onSelect: () => {\n    alert(\"You selected action #\" + i);\n  },\n}));\n\nconst ALotOfActionsExample = () => {\n  const { addAction, removeAction, show } = useContext(CommandPaletteContext);\n\n  useEffect(() => {\n    testActions.forEach((testAction) => addAction(testAction));\n\n    return () => {\n      testActions.forEach((testAction) => removeAction(testAction));\n    };\n  }, [addAction, removeAction]);\n\n  return (\n    <>\n      <p>\n        <button onClick={show}>Open the command palette</button>\n      </p>\n    </>\n  );\n};\n\nexport default ALotOfActionsExample;\n","import React from \"react\";\nimport { CommandPalette } from \"./CommandPalette\";\nimport BasicExample from \"./examples/BasicExample\";\nimport Navbar from \"./examples/common/Navbar\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport KeyboardShortcutExample from \"./examples/KeyboardShortcut\";\nimport ALotOfActionsExample from \"./examples/ALotOfActionsExample\";\n\nfunction App() {\n  return (\n    <CommandPalette InputProps={{ placeholder: \"What are you searching for?\" }}>\n      <BrowserRouter>\n        <Navbar />\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/basic\" element={<BasicExample />} />\n            <Route\n              path=\"/keyboard-shortcut\"\n              element={<KeyboardShortcutExample />}\n            />\n            <Route\n              path=\"/a-lot-of-actions\"\n              element={<ALotOfActionsExample />}\n            />\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </CommandPalette>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}